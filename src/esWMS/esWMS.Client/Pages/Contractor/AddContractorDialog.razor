@using Newtonsoft.Json
@using esWMS.Client.Services
@using esWMS.Client.ViewModels
@using esWMS.Client.ViewModels.SystemActors
@inject IDataService<CreateContractorVM> contractorService
@inject ISnackbar Snackbar
@inject IAlertService AlertService

<MudDialog>
    <TitleContent>
        Nowa kontrahent
    </TitleContent>
    <DialogContent>
        <MudForm Model="@_model"
                 @ref="@_form"
                 Validation="@(_validator.ValidateValue)"
                 ValidationDelay="0">
            <MudCardContent>
                <MudTextField @bind-Value="_model.ContractorId"
                              For="@(() => _model.ContractorId)"
                              Immediate="true"
                              Label="Nazwa"
                              MaxLength="3"
                              TextChanged="@(() => _model.ContractorId = _model.ContractorId?.ToUpper() ?? null)" />

                <MudTextField @bind-Value="_model.ContractorName"
                              For="@(() => _model.ContractorName)"
                              Immediate="true"
                              Label="Nazwa kontrahenta" />

                <MudTextField @bind-Value="_model.VatId"
                              For="@(() => _model.VatId)"
                              Immediate="true"
                              Label="VAT ID" />

                <MudCheckBox @bind-Value="_model.IsSupplier" Label="Dostawca" />

                <MudCheckBox @bind-Value="_model.IsRecipient" Label="Odbiorca" />

                <MudTextField @bind-Value="_model.Country"
                              For="@(() => _model.Country)"
                              Immediate="true"
                              Label="Kraj" />

                <MudTextField @bind-Value="_model.City"
                              For="@(() => _model.City)"
                              Immediate="true"
                              Label="Miasto" />

                <MudTextField @bind-Value="_model.Region"
                              For="@(() => _model.Region)"
                              Immediate="true"
                              Label="Region" />

                <MudTextField @bind-Value="_model.PostalCode"
                              For="@(() => _model.PostalCode)"
                              Immediate="true"
                              Label="Kod pocztowy" />

                <MudTextField @bind-Value="_model.Address"
                              For="@(() => _model.Address)"
                              Immediate="true"
                              Label="Adres" />

                <MudTextField @bind-Value="_model.EmailAddress"
                              For="@(() => _model.EmailAddress)"
                              Immediate="true"
                              Label="Adres email" />

                <MudTextField @bind-Value="_model.PhoneNumber"
                              For="@(() => _model.PhoneNumber)"
                              Immediate="true"
                              Label="Numer telefonu" />

                <MudCheckBox @bind-Value="_model.IsActive" Label="Aktywny" />
            </MudCardContent>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Anuluj</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">Utwórz</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public List<EventCallback>? FuncsOnCreated { get; set; } = new();
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private MudForm _form;
    private CreateContractorVM _model = new();
    private CreateContractorVMValidator _validator = new();

    private void Cancel() => MudDialog.Cancel();

    private async Task Submit()
    {
        await _form.Validate();

        if (_form.IsValid)
        {
            var response = await contractorService.Create("api/v1/Contractor", _model);
            if (response.StatusCode == System.Net.HttpStatusCode.Created)
            {
                Snackbar.Add(new MarkupString($"Utworzono <b>{_model.ContractorId}</b>"), Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
                FuncsOnCreated?.ForEach(async x => await x.InvokeAsync());
            }
            else
            {
                await response.HandleFailure(AlertService);
            }
        }
    }
}
