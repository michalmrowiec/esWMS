@using esWMS.Client.ViewModels
@using esWMS.Client.ViewModels.Documents
<MudDialog>
    <TitleContent>
        Dodawanie pozycji
    </TitleContent>
    <DialogContent>

        <MudTextField @bind-Value="test"
                      Label="Wybrany produkt"
                      Disabled />

        <ProductTable SelectedProduct="OnProductSelected" />

        <MudNumericField Label="Ilość"
                         @bind-Value="quantity" />

        <MudNumericField Label="Cena"
                         @bind-Value="price" />

        <MudSelect T="string"
                   @bind-Value="currency"
                   Label="Waluta"
                   AnchorOrigin="Origin.BottomCenter"
                   Immediate="true">

            <MudSelectItem Value="@(new string("PLN"))">
                PLN
            </MudSelectItem>

        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<EventCallback>? FuncsOnAdded { get; set; } = new();

    [Parameter]
    public List<DocumentItemVM> DocumentItemVMs { get; set; }

    private ProductVM? selectedProduct;
    private int quantity = 0;
    private decimal price = 0;
    private string currency = "PLN";
    private string test = "";


    private void Submit()
    {
        if (selectedProduct != null)
        {
            DocumentItemVMs.Add(new DocumentItemVM()
                {
                    ProductId = selectedProduct.ProductId,
                    ProductCode = selectedProduct.ProductCode,
                    EanCode = selectedProduct.EanCode,
                    ProductName = selectedProduct.ProductName,
                    Quantity = quantity,
                    Price = price,
                    Currency = currency
                });
        }

        FuncsOnAdded?.ForEach(async x => await x.InvokeAsync());

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();

    private void OnProductSelected(ProductVM product)
    {
        selectedProduct = product;
        test = product.ProductName;
        StateHasChanged();
    }
}