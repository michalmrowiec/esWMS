@using esWMS.Client.ViewModels.Documents
@inject IDialogService DialogService

<h3>PzDetails</h3>

<MudText Typo="Typo.body1"><strong>Numer dokumentu:</strong> @PzVM.DocumentId</MudText>

<MudText Typo="Typo.body1">
    <strong>Magazyn wydania:</strong>
    [@PzVM.IssueWarehouseId] @PzVM.IssueWarehouse?.WarehouseName
</MudText>

<MudText Typo="Typo.body1"><strong>Komentarz:</strong> @PzVM.Comment</MudText>

<MudText Typo="Typo.body1">
    <strong>Data wydania dokumentu:</strong>
    @PzVM.DocumentIssueDate.ToString("dd-MM-yyyy")
</MudText>

<MudText Typo="Typo.body1">
    <strong>Zatwierdzono: </strong>
    @if (PzVM.IsApproved)
    {
        <span>TAK</span>
    }
    else
    {
        <span>NIE</span>
    }
</MudText>

<MudText Typo="Typo.body1">
    <strong>Data przyjęcia towaru:</strong>
    @PzVM.GoodsReceiptDate?.ToString("dd-MM-yyyy")
</MudText>

<MudText Typo="Typo.body1">
    <strong>Kontrahent:</strong>
    [@PzVM.SupplierContractorId] @PzVM.SupplierContractor?.ContractorName
</MudText>


<MudDataGrid T="DocumentItemVM" Items="@PzVM.DocumentItems" EditMode="DataGridEditMode.Cell">
    <Columns>
        <PropertyColumn Property="x => x.ProductId" Title="Id" />
        <PropertyColumn Property="x => x.ProductCode" Title="Kod" />
        <PropertyColumn Property="x => x.ProductName" Title="Nazwa" />
        <PropertyColumn Property="x => x.Quantity" Title="Ilość" />
        <TemplateColumn CellClass="d-flex" Title="Zatwierdzony">
            <CellTemplate>
                <MudStack Row>
                    <MudCheckBox Value="@context.Item.IsApproved" Disabled />
                    @if (!context.Item.IsApproved)
                    {
                        <MudButton OnClick="@(() => OpenDialogAsync(context.Item))"
                                   Size="@Size.Small"
                                   Variant="@Variant.Filled"
                                   Color="@Color.Primary">
                            Zatwierdź
                        </MudButton>
                    }
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    [Parameter]
    public PzVM PzVM { get; set; } = new();

    [Parameter]
    public List<EventCallback>? EventCallbacks { get; set; }

    private Task OpenDialogAsync(DocumentItemVM documentItem)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        var parameters = new DialogParameters<ApprovePzItemDialogForm>
        {
            { x => x.DocumentItemVM, documentItem},
            { x => x.FuncsOnAdded, new List<EventCallback>() { EventCallback.Factory.Create(this, StateHasChanged) } }
        };
        return DialogService.ShowAsync<ApprovePzItemDialogForm>(null, parameters, options);
    }
}
