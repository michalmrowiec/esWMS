@using esWMS.Client.Pages
@using esWMS.Client.Pages.Category
@using esWMS.Client.Pages.Contractor
@using esWMS.Client.Pages.Documents.Mmm
@using esWMS.Client.Pages.Documents.Mmp
@using esWMS.Client.Pages.Documents.Pw
@using esWMS.Client.Pages.Documents.Pz
@using esWMS.Client.Pages.Documents.Rw
@using esWMS.Client.Pages.Documents.Wz
@using esWMS.Client.Pages.Documents.Zw
@using esWMS.Client.Pages.Employee
@using esWMS.Client.Pages.OnePage
@using esWMS.Client.Pages.Product
@using esWMS.Client.Pages.Warehouse
@using esWMS.Client.Pages.Warehouse.Location
@using esWMS.Client.Pages.Warehouse.WarehouseUnit
@using esWMS.Client.Pages.Warehouse.WarehouseUnitItem
@using esWMS.Client.States
@inject OnePageState OnePageState

<MudNavMenu>
    <MudButton OnClick="@(() => _allGroupsExpanded = !_allGroupsExpanded)">
        @(_allGroupsExpanded ? "Zwiń" : "Rozwiń")
    </MudButton>
    <MudNavGroup Title="Główne" Expanded="_allGroupsExpanded" Icon="@Icons.Material.Outlined.Category">
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.AutoStories"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Artykuły", new ProductTable(), Guid.NewGuid(), Icons.Material.Filled.AutoStories)))">
            Artykuły
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.Sell"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Kategorie", new CategoryTable(), Guid.NewGuid(), Icons.Material.Filled.Sell)))">
            Kategorie
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.Group"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Kontrahenci", new ContractorTable(), Guid.NewGuid(), Icons.Material.Filled.Group)))">
            Kontrahenci
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.SupervisedUserCircle"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Pracownicy", new EmployeeTable(), Guid.NewGuid(), Icons.Material.Filled.SupervisedUserCircle)))">
            Pracownicy
        </MudNavLink>
    </MudNavGroup>
    <MudNavGroup Title="Magazyny" Expanded="_allGroupsExpanded" Icon="@Icons.Material.Outlined.Warehouse">
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@pallet"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Jednostki Magazynowe", new WarehouseUnitTable(), Guid.NewGuid(), pallet)))">
            Jednostki Magazynowe
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@package"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Pozycje Magazynowe", new WarehouseUnitItemTable(), Guid.NewGuid(), package)))">
            Pozycje Magazynowe
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.BarChart"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Stany Magazynowe", new WarehouseStockTable(), Guid.NewGuid(), Icons.Material.Filled.BarChart)))">
            Stany Magazynowe
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.Warehouse"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Magazyny", new WarehouseTabel(), Guid.NewGuid(), Icons.Material.Filled.Warehouse)))">
            Lista Magazynów
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.Map"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Strefy magazynowe", new ZoneTable(), Guid.NewGuid(), Icons.Material.Filled.Map)))">
            Strefy magazynowe
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.LocationOn"
                    OnClick="@(async () => await OnePageState.AddTab(new TabView("Lokalizacje", new LocationTable(), Guid.NewGuid(), Icons.Material.Filled.LocationOn)))">
            Lokalizacje
        </MudNavLink>
    </MudNavGroup>
    <MudNavGroup Title="Dokumenty" Expanded="_allGroupsExpanded" Icon="@Icons.Material.Outlined.LibraryBooks">
        <MudNavGroup Title="Wydania" Expanded="_allGroupsExpanded" Icon="@Icons.Material.Filled.Logout">
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("WZ", new WzTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                WZ
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("RW", new RwTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                RW
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("MM-", new MmmTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                MM-
            </MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="Przyjęcia" Expanded="_allGroupsExpanded" Icon="@Icons.Material.Filled.Login">
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("PZ", new PzTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                PZ
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("PW", new PwTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                PW
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("ZW", new ZwTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                ZW
            </MudNavLink>
            <MudNavLink Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.List"
                        OnClick="@(async () => await OnePageState.AddTab(new TabView("MM+", new MmpTable(), Guid.NewGuid(), Icons.Material.Filled.List)))">
                MM+
            </MudNavLink>
        </MudNavGroup>
        <MudNavLink Match="NavLinkMatch.Prefix"
                    Icon="@Icons.Material.Filled.Add"
                    OnClick="@(async () => await OpenCreateMmTab())">
            Utwórz MM
        </MudNavLink>
    </MudNavGroup>
</MudNavMenu>

@code {
    private bool _allGroupsExpanded = true;

    private async Task OpenCreateMmTab()
    {
        var tabId = Guid.NewGuid();

        var callbacksOnAddMm = new List<EventCallback>
        {
            EventCallback.Factory.Create(this, () => OnePageState.RemoveTab(tabId)),
            EventCallback.Factory.Create(this, () => OnePageState.AddTab(new TabView("MM-", new MmmTable(), Guid.NewGuid(), Icons.Material.Filled.List)))
        };

        await OnePageState.AddTab(
            new TabView(
                "Tworzenie MM",
                new AddMmm(),
                tabId,
                Icons.Material.Filled.NoteAdd,
                new() { { "EventCallbacks", callbacksOnAddMm } }));
    }

    const string package = @"<svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 24 24"">
    <title>package-variant-closed</title><path d=""M21,16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V7.5C3,7.12 3.21,6.79 3.53,6.62L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.79,6.79 21,7.12 21,7.5V16.5M12,4.15L10.11,5.22L16,8.61L17.96,7.5L12,4.15M6.04,7.5L12,10.85L13.96,9.75L8.08,6.35L6.04,7.5M5,15.91L11,19.29V12.58L5,9.21V15.91M19,15.91V9.21L13,12.58V19.29L19,15.91Z"" />
</svg>";
    const string pallet = @"<svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 24 24"">
    <title>shipping-pallet</title><path d=""M3 20H5V18H11V20H13V18H19V20H21V15H19V16H17V15H15V16H13V15H11V16H9V15H7V16H5V15H3M5 13H19V4H5Z"" />
</svg>";
}