@page "/login"
@using MudBlazor
@using Newtonsoft.Json
@using System.Text
@using esWMS.Client.Services
@using esWMS.Client.ViewModels
@using esWMS.Client.ViewModels.SystemActors
@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject IAlertService AlertService
@inject IAuthService AuthService
@inject NavigationManager Navigation

<MudPaper Class="d-flex justify-center align-center min-height-100">
    <MudCard Class="pa-4">
        <MudCardContent>
            <MudText Typo="Typo.h5" Align="Align.Center">Logowanie</MudText>

            <AuthorizeView>
                <Authorized>
                    <p>Hello, @context.User.Identity?.Name! [@context.User.IsInRole("MNG")]</p>
                </Authorized>
                <NotAuthorized>
                    <p>You're not authorized.</p>
                </NotAuthorized>
            </AuthorizeView>

            <MudForm @ref="form">
                <MudTextField @bind-Value="_loginModel.EmployeeId"
                              Label="Identyfikator pracownika"
                              Variant="Variant.Filled"
                              Margin="Margin.Dense"
                              Required
                              Immediate
                              For="@(() => _loginModel.EmployeeId)" />

                <MudTextField @bind-Value="_loginModel.Password"
                              Label="Hasło"
                              Variant="Variant.Filled"
                              Margin="Margin.Dense"
                              InputType="InputType.Password"
                              Required="true"
                              Immediate="true"
                              For="@(() => _loginModel.Password)" />

                <MudSpacer />
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="LogIn">
                    Zaloguj
                </MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
</MudPaper>

@code {
    private MudForm form;
    private EmployeeLoginVM _loginModel = new EmployeeLoginVM();

    private async Task LogIn()
    {
        var postJson = new StringContent(JsonConvert.SerializeObject(_loginModel), Encoding.UTF8, "application/json");

        using var request = new HttpRequestMessage(HttpMethod.Post, @"api/v1/Employee/login");
        request.Content = postJson;

        var response = await HttpClient.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var empl = JsonConvert.DeserializeObject<LogedEmployee>(content);
            await AuthService.Login(empl);
            Navigation.NavigateTo("/", true);
        }
        else
        {
            await response.HandleFailure(AlertService);
        }
    }
}
