@using Newtonsoft.Json
@using esWMS.Client.Components
@using esWMS.Client.Components.DeleteDialog
@using esWMS.Client.Pages.OnePage
@using esWMS.Client.Services
@using esWMS.Client.States
@using esWMS.Client.ViewModels;
@using esWMS.Client.ViewModels.WarehouseEnvironment
@inject IDataService<CategoryVM> categoryService
@inject IDataService<ProductVM> ProductService
@inject ISnackbar Snackbar
@inject IAlertService AlertService
@inject IDialogService DialogService
@inject OnePageState OnePageState

@if (_product == null)
{
    <MudText>Ladowanie...</MudText>
}
else
{
    <MudGrid>
        <MudItem md="12">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.ProductId"
                                          Label="Identyfikator Produktu"
                                          Variant="Variant.Outlined"
                                          ReadOnly
                                          Margin="Margin.Dense" />
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.ProductCode"
                                          Label="Kod Produktu"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.EanCode"
                                          Label="Kod EAN"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.ProductName"
                                          Label="Nazwa Produktu"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense"
                                          Lines="2" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.ShortProductName"
                                          Label="Skrócona nazwa"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudSelect T="string"
                                       @bind-Value="_product.CategoryId"
                                       Label="Kategoria"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       AnchorOrigin="Origin.BottomCenter"
                                       For="@(() => _product.CategoryId)"
                                       Immediate="true">
                                @foreach (var category in _categories)
                                {
                                    <MudSelectItem Value="@category.CategoryId">
                                        @category.CategoryName
                                    </MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.ProductDescription"
                                          Label="Opis Produktu"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense"
                                          Lines="3" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField ShrinkLabel @bind-Value="_product.SupplierContractorId"
                                          Label="Identyfikator Dostawcy"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="3">
                            <MudCheckBox @bind-Value="_product.IsMedia"
                                         Label="Artykuł jest nośnikiem" />
                        </MudItem>

                        <MudItem xs="12" md="3">
                            <MudCheckBox @bind-Value="_product.IsWeight"
                                         Label="Artykuł wagowy" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudSelect T="string"
                                       @bind-Value="_product.Unit"
                                       Label="Jednostka"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       AnchorOrigin="Origin.BottomCenter"
                                       For="@(() => _product.Unit)"
                                       Immediate="true">
                                @foreach (var unit in _units)
                                {
                                    <MudSelectItem Value="@unit">
                                        @unit
                                    </MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudNumericField ShrinkLabel @bind-Value="_product.TotalWeight"
                                             Label="Waga na jednostkę (kg)"
                                             Variant="Variant.Outlined"
                                             Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudNumericField ShrinkLabel @bind-Value="_product.TotalLength"
                                             Label="Długość (m)"
                                             Variant="Variant.Outlined"
                                             Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudNumericField ShrinkLabel @bind-Value="_product.TotalWidth"
                                             Label="Szerokość (m)"
                                             Variant="Variant.Outlined"
                                             Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudNumericField ShrinkLabel @bind-Value="_product.TotalHeight"
                                             Label="Wysokość (m)"
                                             Variant="Variant.Outlined"
                                             Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudNumericField ShrinkLabel @bind-Value="_product.Price"
                                             Label="Cena"
                                             Variant="Variant.Outlined"
                                             Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudTextField ShrinkLabel @bind-Value="_product.Currency"
                                          Label="Waluta"
                                          Variant="Variant.Outlined"
                                          Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudNumericField ShrinkLabel @bind-Value="_product.VatRate"
                                             Label="Stawka VAT (%)"
                                             Variant="Variant.Outlined"
                                             Margin="Margin.Dense" />
                        </MudItem>

                        <MudItem xs="12" md="6" lg="3">
                            <MudCheckBox @bind-Value="_product.IsActive"
                                         Label="Aktywny" />
                        </MudItem>

                        <AuthorizeView Roles="ADM, MNG">
                            <Authorized>
                                <MudItem xs="12">
                                    <MudButton Variant="Variant.Outlined" Color="Color.Default" Class="me-2" EndIcon="@Icons.Material.Filled.Refresh" OnClick="ReloadProduct">Resetuj</MudButton>
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="me-2" EndIcon="@Icons.Material.Filled.Build" OnClick="UpdateProduct">Zaktualizuj</MudButton>
                                    <MudButton Variant="Variant.Filled" Color="Color.Error" EndIcon="@Icons.Material.Filled.Delete" OnClick="OpenDeleteDialogAsync">Usuń</MudButton>
                                </MudItem>
                            </Authorized>
                        </AuthorizeView>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}

@code {
    [Parameter]
    public string ProductId { get; set; }
    [Parameter]
    public Guid TabId { get; set; }
    private ProductVM? _product;
    private List<CategoryVM> _categories = new();
    private string[] _units = ["szt", "2-pak", "3-pak"];

    protected override async Task OnInitializedAsync()
    {
        var res = await categoryService.GetPagedResult(@"api/v1/Category/get-filtered", new SieveModelVM(1, 500, "", ""));
        _categories = res.Items.ToList();

        await ReloadProduct();
    }

    private async Task ReloadProduct()
    {
        var response = await ProductService.Get(@"api/v1/Product", new() { { "ProductId", ProductId } });
        if (response == null)
        {
            return;
        }

        var json = await response.Content.ReadAsStringAsync();
        _product = JsonConvert.DeserializeObject<ProductVM>(json);

        StateHasChanged();
    }

    private async Task UpdateProduct()
    {
        var response = await ProductService.Put(@"api/v1/Product", _product);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add(new MarkupString("Produkt został zaktualizowany."), Severity.Success);
            await ReloadProduct();
        }
        else
        {
            await response.HandleFailure(AlertService);
        }
    }

    private async Task OpenDeleteDialogAsync()
    {
        var parameters = new DialogParameters<DeleteConfirmDialog>
        {
            { x => x.ContentText, $"Czy na pewno chcesz trwale usunąć artykuł: {_product?.ProductCode} {_product?.ProductName}"}
        };

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        var dialog = await DialogService.ShowAsync<DeleteConfirmDialog>("Delete", parameters, options);
        var result = await dialog.Result;

        if (!result?.Canceled ?? false
            && _product != null)
        {
            await DeleteAsync(_product!);
        }
    }

    private async Task DeleteAsync(ProductVM product)
    {
        var response = await ProductService.Delete(@"api/v1/Product/" + product.ProductId);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add(new MarkupString("Usunięto produkt"), Severity.Success);
            await OnePageState.RemoveTab(TabId);
        }
        else
        {
            await response.HandleFailure(AlertService);
        }
    }
}
