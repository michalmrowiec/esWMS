@using esWMS.Client.Components.TableColumnsFilters
@using esWMS.Client.Pages.Documents
<div class="d-flex">
    <MudSelect T="string"
               Disabled="Disabled"
               @bind-Value="SearchOptions[Column].Operator"
               SelectedValuesChanged="@(() => OnChangedAction.Invoke())"
               Variant="Variant.Text"
               AnchorOrigin="Origin.BottomCenter"
               Style="width: 8%">
        @if (TypeOfField == TypeOfFIlterField.Text)
        {
            <MudSelectItem Value="@("@=")">=</MudSelectItem>
            <MudSelectItem Value="@("!@=")">!=</MudSelectItem>
        }
        else if (TypeOfField == TypeOfFIlterField.Numeric)
        {
            <MudSelectItem Value="@(">")">@string.Concat(">")</MudSelectItem>
            <MudSelectItem Value="@(">=")">@string.Concat(">=")</MudSelectItem>
            <MudSelectItem Value="@("<")">@string.Concat("<")</MudSelectItem>
            <MudSelectItem Value="@("<=")">@string.Concat("<=")</MudSelectItem>
        }
        <MudSelectItem Value="@("==")">==</MudSelectItem>
        <MudSelectItem Value="@("!=")">!==</MudSelectItem>
    </MudSelect>
    <MudTextField T="string"
                  Disabled="Disabled"
                  ValueChanged="@((s) => {SearchOptions[Column].Value = s; OnChangedAction.Invoke();})">
    </MudTextField>
</div>

@code {
    [Parameter]
    public Dictionary<string, FilterOption> SearchOptions { get; set; }

    [Parameter]
    public string Column { get; set; }

    [Parameter]
    public Action OnChangedAction { get; set; }

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public TypeOfFIlterField TypeOfField { get; set; } = TypeOfFIlterField.Text;

    public enum TypeOfFIlterField
    {
        Text,
        Numeric
    }
}
