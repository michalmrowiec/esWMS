@using esWMS.Client.Pages
@using esWMS.Client.Pages.WarehouseEnvironment.Product
@using esWMS.Client.ViewModels
@using esWMS.Client.ViewModels.Documents
@using esWMS.Client.ViewModels.WarehouseEnvironment
@using static esWMS.Client.Pages.WarehouseEnvironment.WarehouseUnit.WarehouseUnitTable

<MudDialog>
    <TitleContent>
        Dodawanie pozycji
    </TitleContent>
    <DialogContent>

        <MudStack Spacing="2">
            <MudGrid>
                <MudItem xs="9">
                    <MudTextField @bind-Value="_productInfo"
                                  Label="Wybrany produkt"
                                  Disabled />
                </MudItem>
                <MudItem xs="3">
                    <MudButton OnClick="@(() => _productTableExpanded = !_productTableExpanded)"
                               StartIcon="@(_productTableExpanded ? Icons.Material.Outlined.SearchOff : Icons.Material.Outlined.Search)">
                        @(_productTableExpanded ? "Zamknij" : "Szukaj")
                    </MudButton>
                </MudItem>
            </MudGrid>

            <MudDivider />
            <MudCollapse Expanded="_productTableExpanded">
                <ProductTable SelectedProduct="OnProductSelected"
                              PageSize="new int[] {5,10,25,50}"
                              TypeOfSelection="SelectionType.Single" />
            </MudCollapse>
        </MudStack>



        <MudNumericField Label="Ilość"
                         @bind-Value="_newDocumentItem.Quantity"
                         Format="@NumericFormat.QuantityStringFormat" />

        <MudNumericField Label="Cena"
                         @bind-Value="_newDocumentItem.Price" />

        <MudSelect T="string"
                   @bind-Value="_newDocumentItem.Currency"
                   Label="Waluta"
                   AnchorOrigin="Origin.BottomCenter"
                   Immediate="true">

            <MudSelectItem Value="@(new string("PLN"))">
                PLN
            </MudSelectItem>
        </MudSelect>

        <MudDatePicker Label="Data przydatności"
                         @bind-Date="_newDocumentItem.BestBefore" />

        <MudTextField Label="Numer partii"
                         @bind-Value="_newDocumentItem.BatchLot" />

        <MudTextField Label="Numer seryjny"
                      @bind-Value="_newDocumentItem.SerialNumber" />

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Anuluj</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Dodaj</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<EventCallback>? FuncsOnAdded { get; set; } = new();

    [Parameter]
    public List<DocumentItemVM> DocumentItemVMs { get; set; }

    private string _productInfo = "";
    private bool _productTableExpanded = true;
    private DocumentItemVM _newDocumentItem = new();

    private void Submit()
    {
        if (_newDocumentItem.ProductId != null)
        {
            DocumentItemVMs.Add(_newDocumentItem);
        }

        FuncsOnAdded?.ForEach(async x => await x.InvokeAsync());

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();

    private void OnProductSelected(ProductVM product)
    {
        _productTableExpanded = false;
        _productInfo = product.ProductName;

        _newDocumentItem.Price = product.Price ?? 0;
        _newDocumentItem.Currency = product.Currency;
        _newDocumentItem.ProductId = product.ProductId;
        _newDocumentItem.ProductCode = product.ProductCode;
        _newDocumentItem.EanCode = product.EanCode;
        _newDocumentItem.ProductName = product.ProductName;
        _newDocumentItem.VatRate = product.VatRate;
        _newDocumentItem.Unit = product.Unit;

        StateHasChanged();
    }
}